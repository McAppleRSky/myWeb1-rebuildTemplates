buildscript {
  dependencies {
    classpath "com.github.node-gradle:gradle-node-plugin:2.2.4"
  }
}

plugins {
  id "com.github.node-gradle.node" version "2.2.4"
  id 'java'
  id 'application'
}

group 'krt.copypast'
version '0.0.1-SNAPSHOT'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
  flatDir {
    dirs '../../repository/lib'
  }
}

dependencies {
  testCompile group: 'junit', name: 'junit', version: '4.12'
  testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'
// https://mvnrepository.com/artifact/com.coveo/nashorn-commonjs-modules
  compile group: 'com.coveo', name: 'nashorn-commonjs-modules', version: '1.0.9'
// https://mvnrepository.com/artifact/commons-io/commons-io
  compile group: 'commons-io', name: 'commons-io', version: '2.7'
// https://mvnrepository.com/artifact/org.json/json
  compile group: 'org.json', name: 'json', version: '20200518'

}

node {
  version = '10.21.0'
  npmVersion = '6.14.6'
  download = false
}

defaultTasks 'mainTask'

test{
  // never UP-TO-DATE
//  systemProperty "random.testing.seed", new Random().nextInt()
  // show standard out and standard error of the test JVM(s) on the console
//  testLogging.showStandardStreams = true
  //resources{
  //  srcDir 'rebuild'
  //  srcDir 'expected'
  //}
}

task installHaml(type: NpmTask){
  args = ["install", "haml", "--save"]
}

task installMustache(type: NpmTask, dependsOn: installHaml){
  args = ["install", "mustache", "--save"]
}

task installHtmlDiffer(type: NpmTask, dependsOn: installMustache){
  args = ["install", "html-differ", "--save"]
}

classes.dependsOn.add(installHtmlDiffer)

ext {
  javaMainClass = "ru.krt.copypast.hamlscript.ExecScript"
}
application {
  mainClassName = javaMainClass
}

build.dependsOn.add(run)

//task execHaml(type:Exec, dependsOn: "installHtmlDiffer") {workingDir 'node_modules/html-differ/bin'
//  commandLine 'node_modules/html-differ/bin/html-differ', 'expected/index.htm', 'rebuild/index.html'}


task mainTask(type: ru.krt.copypast.hamlscript.JavaMainTaskRunner, dependsOn: build){
//  expecteds = expected
//  actuals = actual
//  toActual = pathActual
//  toExpected = pathExpected
}
