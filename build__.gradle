buildscript {
  repositories {flatDir {dirs 'lib'}}
//  repositories {maven {gradlePluginPortal()}}
  dependencies {
    classpath "com.github.node-gradle:gradle-node-plugin:2.2.4"
//    classpath "com.github.node-gradle:gradle-node-plugin:3.0.0"
  }
}

plugins {
//        id 'java'
//    id "com.moowork.node" version "1.3.1"
    id "com.github.node-gradle.node" version "2.2.4"
}

node {
    version = '10.21.0'
    npmVersion = '6.14.6'
    npmWorkDir = file("${buildDir}/npm")
    download = false
}

defaultTasks 'htmlDifferExec' //'htmlDiffer'

task hello(type: NodeTask){script = file("hello.js")}

task installPackage(type: NpmTask){
//  args = ["install", "--save", project.findProperty("package")]

// install the express package only
//args = ['install', 'express', '--save-dev']
args = ['install', project.findProperty("package"), '--save']
}

task installHtmlDiffer(type: NpmTask, dependsOn: "npmInstall"){
  //args = ["install", "--save", "html-differ"]
  args = ["install", "html-differ", "--save"]
}

//task htmlDiffer(type: NodeTask, dependsOn: "installHtmlDiffer"){
//  script = file("node_modules/html-differ/bin/html-differ")
//  args = ["expected/index.htm", "rebuild/index.html"]
//  args = ["expected/index.htm", "rebuild/index.html"]

//  outputs.dirs file("")

//  execOverrides {
//    it.ignoreExitValue = true
//    it.workingDir = 'somewhere'
//    it.standardOutput = new FileOutputStream('logs/my.log')
//    standardOutput = new FileOutputStream('log/my.log')
//  }
//}

//def getJavaVersion() {
//  def out = new ByteArrayOutputStream()
//  exec {
//    workingDir ''
//    commandLine 'java', '--version'
//    standardOutput = out
//    errorOutput = out
//  }
//  return out.toString()
//  return 'tst'
//}

def getHtmlDiff() {
  def out = new ByteArrayOutputStream()
            //new FileOutputStream('log/my.log')
  exec {
//    workingDir ''
    commandLine 'node_modules/html-differ/bin/html-differ', 'expected/index.htm', 'rebuild/index.html'
    standardOutput = out
//    errorOutput = out
  }
  return out//.toString()
//  return 'tst'
}

task htmlDifferExec(//type:Exec,
                      dependsOn: "installHtmlDiffer") {
  doFirst{
    def color = {
      color, text -> def colors = [
        black: 30, red: 31, green: 32, yellow: 33, blue: 34, magenta: 35, cyan: 36, white: 37
      ]
      return new String((char) 27) + "[${colors[color]}m${text}" + new String((char) 27) + "[0m"
    }
    println "|TEST enviroment"
  //  println "|JAVA VERSION: " + getJavaVersion()
    println "|this is ${color 'green', 'some'} ${color 'red', 'colorful'} ${color 'white', 'test'}"
    println "|\u001B[36m Direct test ANSI escape-sequenced\u001B[0m"
//    println ' This is \e[00;31mRed\e[00m'
  }
//  workingDir 'node_modules/html-differ/bin'
  //on linux
//  commandLine 'node_modules/html-differ/bin/html-differ', 'expected/index.htm', 'rebuild/index.html'

  //store the output instead of printing to the console:
//  standardOutput = new ByteArrayOutputStream()

  //extension method stopTomcat.output() can be used to obtain the output:
//  ext.output = {return standardOutput.toString()}
  doLast{
    println "HTML Differ: " + getHtmlDiff()
  }
}
