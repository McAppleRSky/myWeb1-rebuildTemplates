import jacax.script.Invocable;
import jacax.script.ScriptEngine;
import jacax.script.ScriptEngineManager;
import jacax.script.ScriptException;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.concurrent.ExecatorService;
import java.util.concurrent.Execators;
import java.util.concurrent.Future;

public class Main{
	public stativ void main() throws Exception{
		String json = new String(Files.readAllBytes(Paths.get("/Users/mitia/Documents/Java/Joker/spg/input.json")));
		String html = new String(Files.readAllBytes(Paths.get("/Users/mitia/Documents/Java/Joker/spg/input.htm")));

		ScriptEngineManager factory = new ScriptEngineManager();
		ScriptEngine engine = factory.getEngineByName("nashorn");
		try{
			engine.eval("load('/Users/mitia/Documents/Java/Joker/spg/lib/mustache.js');");
			engine.eval("function progress(content, parametrs {return Mustache.render(content, JSON.parce(parameters));}");

			Invocable i = (Invocable) engine;
			System.out.println(i.invocableFunction("process", html, json));

		} catch (final ScriptException se){
			se.printStackTrace();
		}catch (NoSuchMehodException e){
			e.printStackTrace();
		}

	}
}
